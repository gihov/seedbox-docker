server {
	listen 80;
	server_name media.PUBLIC_DOMAIN;
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl http2;
	server_name media.PUBLIC_DOMAIN;
	
	ssl_certificate /etc/letsencrypt/live/media.PUBLIC_DOMAIN/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/media.PUBLIC_DOMAIN/privkey.pem;
	include /etc/nginx/conf.d/security.conf.inc;

	access_log /var/log/nginx/media.PUBLIC_DOMAIN-access.log;
	error_log /var/log/nginx/media.PUBLIC_DOMAIN-error.log;
	
	location / {
		try_files $uri $uri/ =404;
	}
	
	location /ombi {
		proxy_pass http://localhost:5000;
		client_max_body_size 10m;
		client_body_buffer_size 128k;

		# Timeout if the real server is dead
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

		# Basic Proxy Config
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Host $server_name;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_redirect  http://  $scheme://;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_cache_bypass $cookie_session;
		proxy_no_cache $cookie_session;
		proxy_buffers 32 4k;
		proxy_redirect http://localhost:5000 https://$host;
	}
	
	# This allows access to the actual api
	location /ombi/api {
		proxy_pass http://localhost:5000;
	}
	
	# This allows access to the documentation for the api
	location /ombi/swagger {
		proxy_pass http://localhost:5000;
	}
	
	# https://jellyfin.org/docs/general/networking/nginx.html
	location /jellyfin {
		return 302 $scheme://$host/jellyfin/;
	}
	
	location /jellyfin/ {
		proxy_pass http://localhost:8096/jellyfin/;
		proxy_pass_request_headers on;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Host $http_host;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection;
		proxy_buffering off;
	}
}